apiVersion: v1
kind: ConfigMap
metadata:
  name: subforge-config
  namespace: subforge
  labels:
    app.kubernetes.io/name: subforge
    app.kubernetes.io/component: config
data:
  # Database Configuration
  POSTGRES_DB: "subforge"
  POSTGRES_USER: "subforge"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Backend Configuration
  ENVIRONMENT: "production"
  CORS_ORIGINS: "https://subforge.yourdomain.com"
  LOG_LEVEL: "info"
  
  # Frontend Configuration
  NEXT_PUBLIC_API_URL: "https://api.subforge.yourdomain.com"
  NEXT_PUBLIC_WS_URL: "wss://api.subforge.yourdomain.com"
  NEXT_PUBLIC_ENVIRONMENT: "production"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: subforge
  labels:
    app.kubernetes.io/name: subforge
    app.kubernetes.io/component: database
data:
  postgresql.conf: |
    # PostgreSQL Production Configuration
    max_connections = 200
    shared_buffers = 256MB
    effective_cache_size = 1GB
    work_mem = 4MB
    maintenance_work_mem = 64MB
    random_page_cost = 1.1
    temp_file_limit = 2GB
    log_min_duration_statement = 1000
    log_connections = on
    log_disconnections = on
    log_lock_waits = on
    log_statement = mod
    log_temp_files = 0
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    effective_io_concurrency = 200
    
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: subforge
  labels:
    app.kubernetes.io/name: subforge
    app.kubernetes.io/component: cache
data:
  redis.conf: |
    # Redis Production Configuration
    appendonly yes
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    save 900 1
    save 300 10
    save 60 10000
    tcp-keepalive 300
    timeout 0
    
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: subforge
  labels:
    app.kubernetes.io/name: subforge
    app.kubernetes.io/component: proxy
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging format
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        # Basic settings
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;
        
        # Buffer sizes
        client_body_buffer_size 128k;
        client_max_body_size 10m;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 4k;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rss+xml
            application/xml
            font/eot
            font/otf
            font/ttf
            image/svg+xml
            text/css
            text/javascript
            text/plain
            text/xml;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
        limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
        
        include /etc/nginx/conf.d/*.conf;
    }
  
  default.conf: |
    upstream backend {
        least_conn;
        server backend-service:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream frontend {
        least_conn;
        server frontend-service:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        limit_conn conn_limit_per_ip 20;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API routes
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # WebSocket routes
        location /ws/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_buffering off;
        }
        
        # Frontend routes
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Static assets caching
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
    }