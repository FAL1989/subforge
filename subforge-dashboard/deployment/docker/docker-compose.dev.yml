version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: subforge-postgres-dev
    environment:
      POSTGRES_DB: subforge_dev
      POSTGRES_USER: subforge
      POSTGRES_PASSWORD: subforge_dev_pass
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U subforge -d subforge_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - subforge-dev

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: subforge-redis-dev
    command: redis-server --appendonly yes --requirepass subforge_redis_pass
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - subforge-dev

  # FastAPI Backend
  backend:
    build:
      context: ../..
      dockerfile: deployment/docker/backend.Dockerfile
      target: development
    container_name: subforge-backend-dev
    environment:
      - DATABASE_URL=postgresql://subforge:subforge_dev_pass@postgres:5432/subforge_dev
      - REDIS_URL=redis://:subforge_redis_pass@redis:6379/0
      - ENVIRONMENT=development
      - SECRET_KEY=dev-secret-key-change-in-production
      - CORS_ORIGINS=http://localhost:3001,http://127.0.0.1:3001
      - LOG_LEVEL=debug
    ports:
      - "8000:8000"
    volumes:
      - ../../backend:/app
      - backend_logs_dev:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - subforge-dev
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ../..
      dockerfile: deployment/docker/frontend.Dockerfile
      target: development
    container_name: subforge-frontend-dev
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - NEXT_PUBLIC_ENVIRONMENT=development
      - NODE_ENV=development
    ports:
      - "3001:3001"
    volumes:
      - ../../frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - subforge-dev
    restart: unless-stopped

  # Nginx Reverse Proxy (optional for local testing)
  nginx:
    image: nginx:alpine
    container_name: subforge-nginx-dev
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - subforge-dev
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  backend_logs_dev:
    driver: local

networks:
  subforge-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16