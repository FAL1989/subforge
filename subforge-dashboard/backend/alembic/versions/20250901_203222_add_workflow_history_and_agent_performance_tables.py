"""Add workflow history and agent performance tables

Revision ID: 20250901_203222
Revises: 
Create Date: 2025-09-01 20:32:22.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '20250901_203222'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create workflow_history table
    op.create_table('workflow_history',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('workflow_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('execution_id', sa.String(length=255), nullable=False),
    sa.Column('execution_number', sa.Integer(), nullable=False),
    sa.Column('workflow_name', sa.String(length=255), nullable=False),
    sa.Column('workflow_type', sa.String(length=100), nullable=True),
    sa.Column('project_id', sa.String(length=255), nullable=True),
    sa.Column('project_name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('final_result', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('total_phases', sa.Integer(), nullable=False),
    sa.Column('completed_phases', sa.Integer(), nullable=False),
    sa.Column('failed_phases', sa.Integer(), nullable=False),
    sa.Column('skipped_phases', sa.Integer(), nullable=False),
    sa.Column('total_tasks', sa.Integer(), nullable=False),
    sa.Column('completed_tasks', sa.Integer(), nullable=False),
    sa.Column('failed_tasks', sa.Integer(), nullable=False),
    sa.Column('success_rate', sa.Float(), nullable=False),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('efficiency_score', sa.Float(), nullable=True),
    sa.Column('configuration', sa.JSON(), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('environment_info', sa.JSON(), nullable=False),
    sa.Column('assigned_agents', sa.JSON(), nullable=False),
    sa.Column('agent_performance_summary', sa.JSON(), nullable=False),
    sa.Column('error_messages', sa.JSON(), nullable=False),
    sa.Column('warnings', sa.JSON(), nullable=False),
    sa.Column('critical_issues', sa.JSON(), nullable=False),
    sa.Column('resource_usage', sa.JSON(), nullable=False),
    sa.Column('triggered_by', sa.String(length=255), nullable=True),
    sa.Column('trigger_event', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes for workflow_history
    op.create_index('idx_workflow_history_duration', 'workflow_history', ['duration_seconds'], unique=False)
    op.create_index('idx_workflow_history_execution', 'workflow_history', ['workflow_id', 'execution_number'], unique=False)
    op.create_index('idx_workflow_history_project_time', 'workflow_history', ['project_id', 'started_at'], unique=False)
    op.create_index('idx_workflow_history_status_time', 'workflow_history', ['status', 'started_at'], unique=False)
    op.create_index(op.f('ix_workflow_history_completed_at'), 'workflow_history', ['completed_at'], unique=False)
    op.create_index(op.f('ix_workflow_history_execution_id'), 'workflow_history', ['execution_id'], unique=False)
    op.create_index(op.f('ix_workflow_history_id'), 'workflow_history', ['id'], unique=False)
    op.create_index(op.f('ix_workflow_history_project_id'), 'workflow_history', ['project_id'], unique=False)
    op.create_index(op.f('ix_workflow_history_started_at'), 'workflow_history', ['started_at'], unique=False)
    op.create_index(op.f('ix_workflow_history_status'), 'workflow_history', ['status'], unique=False)
    op.create_index(op.f('ix_workflow_history_workflow_id'), 'workflow_history', ['workflow_id'], unique=False)
    op.create_index(op.f('ix_workflow_history_workflow_name'), 'workflow_history', ['workflow_name'], unique=False)
    op.create_index(op.f('ix_workflow_history_workflow_type'), 'workflow_history', ['workflow_type'], unique=False)

    # Create phase_history table
    op.create_table('phase_history',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('workflow_history_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('phase_name', sa.String(length=255), nullable=False),
    sa.Column('phase_type', sa.String(length=100), nullable=True),
    sa.Column('phase_order', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('result', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('assigned_agent_id', sa.String(length=255), nullable=True),
    sa.Column('assigned_agent_name', sa.String(length=255), nullable=True),
    sa.Column('agent_utilization', sa.Float(), nullable=True),
    sa.Column('phase_config', sa.JSON(), nullable=False),
    sa.Column('input_parameters', sa.JSON(), nullable=False),
    sa.Column('output_results', sa.JSON(), nullable=False),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('performance_score', sa.Float(), nullable=True),
    sa.Column('total_tasks', sa.Integer(), nullable=False),
    sa.Column('completed_tasks', sa.Integer(), nullable=False),
    sa.Column('failed_tasks', sa.Integer(), nullable=False),
    sa.Column('dependencies', sa.JSON(), nullable=False),
    sa.Column('dependents', sa.JSON(), nullable=False),
    sa.Column('error_messages', sa.JSON(), nullable=False),
    sa.Column('warnings', sa.JSON(), nullable=False),
    sa.Column('resource_usage', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['workflow_history_id'], ['workflow_history.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes for phase_history
    op.create_index('idx_phase_history_agent', 'phase_history', ['assigned_agent_id', 'started_at'], unique=False)
    op.create_index('idx_phase_history_duration', 'phase_history', ['duration_seconds'], unique=False)
    op.create_index('idx_phase_history_status_time', 'phase_history', ['status', 'started_at'], unique=False)
    op.create_index('idx_phase_history_workflow_order', 'phase_history', ['workflow_history_id', 'phase_order'], unique=False)
    op.create_index(op.f('ix_phase_history_assigned_agent_id'), 'phase_history', ['assigned_agent_id'], unique=False)
    op.create_index(op.f('ix_phase_history_id'), 'phase_history', ['id'], unique=False)
    op.create_index(op.f('ix_phase_history_phase_name'), 'phase_history', ['phase_name'], unique=False)
    op.create_index(op.f('ix_phase_history_phase_order'), 'phase_history', ['phase_order'], unique=False)
    op.create_index(op.f('ix_phase_history_phase_type'), 'phase_history', ['phase_type'], unique=False)
    op.create_index(op.f('ix_phase_history_result'), 'phase_history', ['result'], unique=False)
    op.create_index(op.f('ix_phase_history_started_at'), 'phase_history', ['started_at'], unique=False)
    op.create_index(op.f('ix_phase_history_status'), 'phase_history', ['status'], unique=False)
    op.create_index(op.f('ix_phase_history_workflow_history_id'), 'phase_history', ['workflow_history_id'], unique=False)

    # Create handoff_history table
    op.create_table('handoff_history',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('workflow_history_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('handoff_name', sa.String(length=255), nullable=False),
    sa.Column('handoff_type', sa.String(length=100), nullable=True),
    sa.Column('source_phase_name', sa.String(length=255), nullable=True),
    sa.Column('target_phase_name', sa.String(length=255), nullable=True),
    sa.Column('source_agent_id', sa.String(length=255), nullable=True),
    sa.Column('target_agent_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('result', sa.String(length=50), nullable=True),
    sa.Column('initiated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('handoff_data', sa.JSON(), nullable=False),
    sa.Column('validation_rules', sa.JSON(), nullable=False),
    sa.Column('validation_results', sa.JSON(), nullable=False),
    sa.Column('data_quality_score', sa.Float(), nullable=True),
    sa.Column('handoff_efficiency_score', sa.Float(), nullable=True),
    sa.Column('error_messages', sa.JSON(), nullable=False),
    sa.Column('warnings', sa.JSON(), nullable=False),
    sa.Column('validation_failures', sa.JSON(), nullable=False),
    sa.Column('context_info', sa.JSON(), nullable=False),
    sa.Column('handoff_metadata', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['workflow_history_id'], ['workflow_history.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes for handoff_history
    op.create_index('idx_handoff_history_agents', 'handoff_history', ['source_agent_id', 'target_agent_id'], unique=False)
    op.create_index('idx_handoff_history_duration', 'handoff_history', ['duration_seconds'], unique=False)
    op.create_index('idx_handoff_history_phases', 'handoff_history', ['source_phase_name', 'target_phase_name'], unique=False)
    op.create_index('idx_handoff_history_status', 'handoff_history', ['status', 'initiated_at'], unique=False)
    op.create_index('idx_handoff_history_workflow_time', 'handoff_history', ['workflow_history_id', 'initiated_at'], unique=False)
    op.create_index(op.f('ix_handoff_history_handoff_name'), 'handoff_history', ['handoff_name'], unique=False)
    op.create_index(op.f('ix_handoff_history_handoff_type'), 'handoff_history', ['handoff_type'], unique=False)
    op.create_index(op.f('ix_handoff_history_id'), 'handoff_history', ['id'], unique=False)
    op.create_index(op.f('ix_handoff_history_initiated_at'), 'handoff_history', ['initiated_at'], unique=False)
    op.create_index(op.f('ix_handoff_history_result'), 'handoff_history', ['result'], unique=False)
    op.create_index(op.f('ix_handoff_history_source_agent_id'), 'handoff_history', ['source_agent_id'], unique=False)
    op.create_index(op.f('ix_handoff_history_source_phase_name'), 'handoff_history', ['source_phase_name'], unique=False)
    op.create_index(op.f('ix_handoff_history_status'), 'handoff_history', ['status'], unique=False)
    op.create_index(op.f('ix_handoff_history_target_agent_id'), 'handoff_history', ['target_agent_id'], unique=False)
    op.create_index(op.f('ix_handoff_history_target_phase_name'), 'handoff_history', ['target_phase_name'], unique=False)
    op.create_index(op.f('ix_handoff_history_workflow_history_id'), 'handoff_history', ['workflow_history_id'], unique=False)

    # Create agent_performance_metrics table
    op.create_table('agent_performance_metrics',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('agent_id', sa.String(length=255), nullable=False),
    sa.Column('agent_name', sa.String(length=255), nullable=False),
    sa.Column('agent_type', sa.String(length=100), nullable=True),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_type', sa.String(length=50), nullable=False),
    sa.Column('total_workflows', sa.Integer(), nullable=False),
    sa.Column('successful_workflows', sa.Integer(), nullable=False),
    sa.Column('failed_workflows', sa.Integer(), nullable=False),
    sa.Column('total_phases', sa.Integer(), nullable=False),
    sa.Column('successful_phases', sa.Integer(), nullable=False),
    sa.Column('failed_phases', sa.Integer(), nullable=False),
    sa.Column('total_tasks', sa.Integer(), nullable=False),
    sa.Column('successful_tasks', sa.Integer(), nullable=False),
    sa.Column('failed_tasks', sa.Integer(), nullable=False),
    sa.Column('total_active_time_seconds', sa.Float(), nullable=False),
    sa.Column('average_task_duration_seconds', sa.Float(), nullable=True),
    sa.Column('average_phase_duration_seconds', sa.Float(), nullable=True),
    sa.Column('average_quality_score', sa.Float(), nullable=True),
    sa.Column('average_performance_score', sa.Float(), nullable=True),
    sa.Column('consistency_score', sa.Float(), nullable=True),
    sa.Column('utilization_percentage', sa.Float(), nullable=False),
    sa.Column('idle_time_seconds', sa.Float(), nullable=False),
    sa.Column('overload_incidents', sa.Integer(), nullable=False),
    sa.Column('total_errors', sa.Integer(), nullable=False),
    sa.Column('total_warnings', sa.Integer(), nullable=False),
    sa.Column('critical_issues', sa.Integer(), nullable=False),
    sa.Column('average_cpu_usage', sa.Float(), nullable=True),
    sa.Column('average_memory_usage', sa.Float(), nullable=True),
    sa.Column('peak_resource_usage', sa.JSON(), nullable=False),
    sa.Column('successful_handoffs', sa.Integer(), nullable=False),
    sa.Column('failed_handoffs', sa.Integer(), nullable=False),
    sa.Column('average_handoff_time_seconds', sa.Float(), nullable=True),
    sa.Column('task_category_performance', sa.JSON(), nullable=False),
    sa.Column('skill_proficiency_scores', sa.JSON(), nullable=False),
    sa.Column('performance_trend', sa.String(length=50), nullable=True),
    sa.Column('trend_confidence', sa.Float(), nullable=True),
    sa.Column('learning_rate', sa.Float(), nullable=True),
    sa.Column('adaptation_score', sa.Float(), nullable=True),
    sa.Column('improvement_rate', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('calculated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes for agent_performance_metrics
    op.create_index('idx_agent_perf_agent_period', 'agent_performance_metrics', ['agent_id', 'period_start', 'period_end'], unique=False)
    op.create_index('idx_agent_perf_quality', 'agent_performance_metrics', ['average_quality_score', 'period_start'], unique=False)
    op.create_index('idx_agent_perf_trend', 'agent_performance_metrics', ['performance_trend', 'period_start'], unique=False)
    op.create_index('idx_agent_perf_type_period', 'agent_performance_metrics', ['agent_type', 'period_type', 'period_start'], unique=False)
    op.create_index('idx_agent_perf_utilization', 'agent_performance_metrics', ['utilization_percentage', 'period_start'], unique=False)
    op.create_index(op.f('ix_agent_performance_metrics_agent_id'), 'agent_performance_metrics', ['agent_id'], unique=False)
    op.create_index(op.f('ix_agent_performance_metrics_agent_type'), 'agent_performance_metrics', ['agent_type'], unique=False)
    op.create_index(op.f('ix_agent_performance_metrics_id'), 'agent_performance_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_agent_performance_metrics_period_end'), 'agent_performance_metrics', ['period_end'], unique=False)
    op.create_index(op.f('ix_agent_performance_metrics_period_start'), 'agent_performance_metrics', ['period_start'], unique=False)
    op.create_index(op.f('ix_agent_performance_metrics_period_type'), 'agent_performance_metrics', ['period_type'], unique=False)
    op.create_index(op.f('ix_agent_performance_metrics_performance_trend'), 'agent_performance_metrics', ['performance_trend'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop agent_performance_metrics table
    op.drop_index(op.f('ix_agent_performance_metrics_performance_trend'), table_name='agent_performance_metrics')
    op.drop_index(op.f('ix_agent_performance_metrics_period_type'), table_name='agent_performance_metrics')
    op.drop_index(op.f('ix_agent_performance_metrics_period_start'), table_name='agent_performance_metrics')
    op.drop_index(op.f('ix_agent_performance_metrics_period_end'), table_name='agent_performance_metrics')
    op.drop_index(op.f('ix_agent_performance_metrics_id'), table_name='agent_performance_metrics')
    op.drop_index(op.f('ix_agent_performance_metrics_agent_type'), table_name='agent_performance_metrics')
    op.drop_index(op.f('ix_agent_performance_metrics_agent_id'), table_name='agent_performance_metrics')
    op.drop_index('idx_agent_perf_utilization', table_name='agent_performance_metrics')
    op.drop_index('idx_agent_perf_type_period', table_name='agent_performance_metrics')
    op.drop_index('idx_agent_perf_trend', table_name='agent_performance_metrics')
    op.drop_index('idx_agent_perf_quality', table_name='agent_performance_metrics')
    op.drop_index('idx_agent_perf_agent_period', table_name='agent_performance_metrics')
    op.drop_table('agent_performance_metrics')
    
    # Drop handoff_history table
    op.drop_index(op.f('ix_handoff_history_workflow_history_id'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_target_phase_name'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_target_agent_id'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_status'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_source_phase_name'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_source_agent_id'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_result'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_initiated_at'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_id'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_handoff_type'), table_name='handoff_history')
    op.drop_index(op.f('ix_handoff_history_handoff_name'), table_name='handoff_history')
    op.drop_index('idx_handoff_history_workflow_time', table_name='handoff_history')
    op.drop_index('idx_handoff_history_status', table_name='handoff_history')
    op.drop_index('idx_handoff_history_phases', table_name='handoff_history')
    op.drop_index('idx_handoff_history_duration', table_name='handoff_history')
    op.drop_index('idx_handoff_history_agents', table_name='handoff_history')
    op.drop_table('handoff_history')
    
    # Drop phase_history table
    op.drop_index(op.f('ix_phase_history_workflow_history_id'), table_name='phase_history')
    op.drop_index(op.f('ix_phase_history_status'), table_name='phase_history')
    op.drop_index(op.f('ix_phase_history_started_at'), table_name='phase_history')
    op.drop_index(op.f('ix_phase_history_result'), table_name='phase_history')
    op.drop_index(op.f('ix_phase_history_phase_type'), table_name='phase_history')
    op.drop_index(op.f('ix_phase_history_phase_order'), table_name='phase_history')
    op.drop_index(op.f('ix_phase_history_phase_name'), table_name='phase_history')
    op.drop_index(op.f('ix_phase_history_id'), table_name='phase_history')
    op.drop_index(op.f('ix_phase_history_assigned_agent_id'), table_name='phase_history')
    op.drop_index('idx_phase_history_workflow_order', table_name='phase_history')
    op.drop_index('idx_phase_history_status_time', table_name='phase_history')
    op.drop_index('idx_phase_history_duration', table_name='phase_history')
    op.drop_index('idx_phase_history_agent', table_name='phase_history')
    op.drop_table('phase_history')
    
    # Drop workflow_history table
    op.drop_index(op.f('ix_workflow_history_workflow_type'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_workflow_name'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_workflow_id'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_status'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_started_at'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_project_id'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_id'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_execution_id'), table_name='workflow_history')
    op.drop_index(op.f('ix_workflow_history_completed_at'), table_name='workflow_history')
    op.drop_index('idx_workflow_history_status_time', table_name='workflow_history')
    op.drop_index('idx_workflow_history_project_time', table_name='workflow_history')
    op.drop_index('idx_workflow_history_execution', table_name='workflow_history')
    op.drop_index('idx_workflow_history_duration', table_name='workflow_history')
    op.drop_table('workflow_history')
    # ### end Alembic commands ###