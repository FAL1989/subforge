[tool:pytest]
# PyTest configuration for Phase 3 integration tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    -ra
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=85
    --durations=10

# Markers
markers =
    integration: Integration tests for Phase 3 refactoring
    performance: Performance benchmark tests
    architecture: Architecture compliance tests
    slow: Tests that take longer than 2 seconds
    unit: Fast unit tests
    async: Async tests requiring event loop

# Coverage configuration
[coverage:run]
source = subforge
omit = 
    */tests/*
    */venv/*
    */build/*
    */__pycache__/*
    */migrations/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = test_reports/coverage_html

[coverage:xml]
output = test_reports/coverage.xml